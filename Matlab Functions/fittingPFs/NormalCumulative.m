function prob = NormalCumulative(x,u,var,guess,lapse)% function prob = NormalCumulative(x,u,var)% % Compute the probability that a draw from a N(u,var)% distribution is less than x.%% Optional lower and upper bound arguments allow for scaling of p values% between a lower and upper bound. Function will default to scaling p% values between 0 and 1.%% 6/25/96  dhb  Fixed for new erf convention.% check inputsif nargin < 3    error('NormalCumulative requires at least three arguments')endif nargin < 5    guess = .5;    lapse = 0;end% set upper and lower boundslowerBound = guess;upperBound = 1 - lapse;[m,n] = size(x);z = (x - u*ones(m,n))/sqrt(var);% AMK: scale p values between upper and lower boundprob = mean([upperBound lowerBound]) + erf(z/sqrt(2)).*((upperBound-lowerBound)/2);% prob = 0.75 + erf(z/sqrt(2))/4; % AMK changed to scale between .5 and 1% prob = 0.5 + erf(z/sqrt(2))/2; % originally scaled between 0 and 1